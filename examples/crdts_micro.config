{mode,{rate,max}}.
{duration,3}.
{concurrent,1}.
{rng_seed,now}.

%% This bucket type must be created and set to be datatype, maps.
{riakc_pb_bucket_map,{<<"maps">>,<<"testbucket">>}}.
{riakc_pb_bucket_set,{<<"sets">>,<<"testbucket">>}}.
{riakc_pb_bucket_counter,{<<"counters">>,<<"testbucket">>}}.
{riakc_pb_bucket_register,{<<"registers">>,<<"testbucket">>}}.

{key_generator, {uniform_int, 1}}.
{value_generator, {uniform_int, 1000}}.
{map_depth, {1,3}}.
{transaction_size, {1,1}}.
{fields_domain, 1000}.
{reg_size_in_bytes, {1, 1}}.

{ops_frequency, [{riak_dt_counter, {[{increment, 1}, {decrement, 1}], 100}},
                 {riak_dt_delta_counter, {[{increment, 1}, {decrement, 1}], 100}},
                 {riak_dt_orswot, {[{add, 1}, {remove, 1}], 100}},
                 {riak_dt_delta_orswot, {[{add, 1}, {remove, 1}], 100}},
                 {riak_dt_lwwreg, {[{update,1}], 100}},
                 {flag, {[{disable, 1},{enable, 1}], 100}}]}.

{ops_frequency_map, [{riak_dt_pncounter, {[{increment, 1}, {decrement, 1}], 100}},
                     {riak_dt_lwwreg, {[{assign, 1}], 100}},
                     {riak_dt_od_flag, {[{disable, 1},{enable, 1}], 100}}]}.

%{operations, [{{delta, {riak_dt_delta_orswot, micro_op}}, 1},
%              {{crdt, {riak_dt_orswot, micro_op}}, 1},
%              {{delta, {riak_dt_delta_orswot, add}}, 1},
%              {{delta, {riak_dt_delta_orswot, remove}}, 1},
%              {{crdt, {riak_dt_orswot, add}}, 1},
%              {{crdt, {riak_dt_orswot, remove}}, 1},
%              {{crdt, {riak_dt_counter, micro_op}}, 1},
%              {{delta, {riak_dt_delta_counter, micro_op}}, 1}
%              ]
%}.

{operations, [{{crdt, {riak_dt_map, micro_op}}, 1}]}.



%%{riakc_pb_ips,[{"riak101.aws",10017},
%%               {"riak102.aws",10017},
%%               {"riak103.aws",10017},
%%               {"riak104.aws",10017},
%%               {"riak105.aws",10017}]}.

{riakc_pb_replies,default}.

{driver,basho_bench_driver_riakc_pb_crdt_micro}.

%./bin/riak-admin bucket-type create maps '{"props":{"datatype":"map"}}'
%./bin/riak-admin bucket-type create sets '{"props":{"datatype":"set"}}'
%./bin/riak-admin bucket-type create registers '{"props":{"datatype":"register"}}'
%./bin/riak-admin bucket-type create counters '{"props":{"datatype":"counter"}}'
%./bin/riak-admin bucket-type activate maps
%./bin/riak-admin bucket-type activate sets
%./bin/riak-admin bucket-type activate registers
%./bin/riak-admin bucket-type activate counters
